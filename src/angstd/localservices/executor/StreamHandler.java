package angstd.localservices.executor;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

/**
 * Ensures the appropriate handling of streams which are 
 * generated by a process object. Therefore its avoided that the process 
 * gets stuck and processing of generated output is provided.
 * <p>
 * A listener can be applied to the stream which will be notified
 * about the process output. If no ProcessListener is assigned to the
 * stream the standard output is taken.
 * <p>
 * The process streams can be differentiated by the streams type between
 * output and error.
 * 
 * 
 * @author Andrew Moore, Andreas Held
 *
 */
public class StreamHandler extends Thread implements ProcessListener{
	public static final String OUTPUT = "Output";
	public static final String ERROR = "Error";
   
	protected InputStream is;
    protected String type;
    protected ProcessListener listener;
    
    
    public StreamHandler(InputStream is, String type, ProcessListener listener) {
        this.is = is;
        this.type = type;
        this.listener = (listener != null) ? listener : this;
    }
    
    
    public void run() {
        try {
            BufferedReader br = new BufferedReader(new InputStreamReader(is));
            String line = null;
            
            while ((line = br.readLine()) != null)
            	listener.outputRecieved(line, type);

        } catch (IOException ioe) {
        	ioe.printStackTrace();  
        }
    }

	public void outputRecieved(String out, String type) {
		if (type.equals(ERROR))
			System.out.print("ERROR>");
		System.out.println(out);	
	}


	public void setResult(int res) {
		System.out.println("!OHOH!");
	}
}
